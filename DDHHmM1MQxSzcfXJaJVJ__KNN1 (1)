{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNzXqOuQBx4/hkHxoyaBhaC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"UyUlUbR2zdbI"},"outputs":[],"source":["import pandas as pd\n","\n","train_data = pd.read_csv('train.csv')\n","test_data = pd.read_csv('test.csv')"]},{"cell_type":"code","source":["train_data\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"FL_Pvrmn_LCS","executionInfo":{"status":"ok","timestamp":1728657081701,"user_tz":-420,"elapsed":666,"user":{"displayName":"Trinh VÅ©","userId":"11090666170602855077"}},"outputId":"f471df82-9822-4137-f011-48fcfe61589d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n","0               842     0          2.2         0   1       0           7   \n","1              1021     1          0.5         1   0       1          53   \n","2               563     1          0.5         1   2       1          41   \n","3               615     1          2.5         0   0       0          10   \n","4              1821     1          1.2         0  13       1          44   \n","...             ...   ...          ...       ...  ..     ...         ...   \n","1995            794     1          0.5         1   0       1           2   \n","1996           1965     1          2.6         1   0       0          39   \n","1997           1911     0          0.9         1   1       1          36   \n","1998           1512     0          0.9         0   4       1          46   \n","1999            510     1          2.0         1   5       1          45   \n","\n","      m_dep  mobile_wt  n_cores  ...  px_height  px_width   ram  sc_h  sc_w  \\\n","0       0.6        188        2  ...         20       756  2549     9     7   \n","1       0.7        136        3  ...        905      1988  2631    17     3   \n","2       0.9        145        5  ...       1263      1716  2603    11     2   \n","3       0.8        131        6  ...       1216      1786  2769    16     8   \n","4       0.6        141        2  ...       1208      1212  1411     8     2   \n","...     ...        ...      ...  ...        ...       ...   ...   ...   ...   \n","1995    0.8        106        6  ...       1222      1890   668    13     4   \n","1996    0.2        187        4  ...        915      1965  2032    11    10   \n","1997    0.7        108        8  ...        868      1632  3057     9     1   \n","1998    0.1        145        5  ...        336       670   869    18    10   \n","1999    0.9        168        6  ...        483       754  3919    19     4   \n","\n","      talk_time  three_g  touch_screen  wifi  price_range  \n","0            19        0             0     1            1  \n","1             7        1             1     0            2  \n","2             9        1             1     0            2  \n","3            11        1             0     0            2  \n","4            15        1             1     0            1  \n","...         ...      ...           ...   ...          ...  \n","1995         19        1             1     0            0  \n","1996         16        1             1     1            2  \n","1997          5        1             1     0            3  \n","1998         19        1             1     1            0  \n","1999          2        1             1     1            3  \n","\n","[2000 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-510e4aee-f0ea-49c0-b6e9-3a5304e993ae\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>battery_power</th>\n","      <th>blue</th>\n","      <th>clock_speed</th>\n","      <th>dual_sim</th>\n","      <th>fc</th>\n","      <th>four_g</th>\n","      <th>int_memory</th>\n","      <th>m_dep</th>\n","      <th>mobile_wt</th>\n","      <th>n_cores</th>\n","      <th>...</th>\n","      <th>px_height</th>\n","      <th>px_width</th>\n","      <th>ram</th>\n","      <th>sc_h</th>\n","      <th>sc_w</th>\n","      <th>talk_time</th>\n","      <th>three_g</th>\n","      <th>touch_screen</th>\n","      <th>wifi</th>\n","      <th>price_range</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>842</td>\n","      <td>0</td>\n","      <td>2.2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0.6</td>\n","      <td>188</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>20</td>\n","      <td>756</td>\n","      <td>2549</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1021</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>53</td>\n","      <td>0.7</td>\n","      <td>136</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>905</td>\n","      <td>1988</td>\n","      <td>2631</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>563</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>41</td>\n","      <td>0.9</td>\n","      <td>145</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>1263</td>\n","      <td>1716</td>\n","      <td>2603</td>\n","      <td>11</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>615</td>\n","      <td>1</td>\n","      <td>2.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0.8</td>\n","      <td>131</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>1216</td>\n","      <td>1786</td>\n","      <td>2769</td>\n","      <td>16</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1821</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>44</td>\n","      <td>0.6</td>\n","      <td>141</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>1208</td>\n","      <td>1212</td>\n","      <td>1411</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>794</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0.8</td>\n","      <td>106</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>1222</td>\n","      <td>1890</td>\n","      <td>668</td>\n","      <td>13</td>\n","      <td>4</td>\n","      <td>19</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>1965</td>\n","      <td>1</td>\n","      <td>2.6</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>39</td>\n","      <td>0.2</td>\n","      <td>187</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>915</td>\n","      <td>1965</td>\n","      <td>2032</td>\n","      <td>11</td>\n","      <td>10</td>\n","      <td>16</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>1911</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>36</td>\n","      <td>0.7</td>\n","      <td>108</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>868</td>\n","      <td>1632</td>\n","      <td>3057</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>1512</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>46</td>\n","      <td>0.1</td>\n","      <td>145</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>336</td>\n","      <td>670</td>\n","      <td>869</td>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>19</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>510</td>\n","      <td>1</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>0.9</td>\n","      <td>168</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>483</td>\n","      <td>754</td>\n","      <td>3919</td>\n","      <td>19</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows Ã 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-510e4aee-f0ea-49c0-b6e9-3a5304e993ae')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-510e4aee-f0ea-49c0-b6e9-3a5304e993ae button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-510e4aee-f0ea-49c0-b6e9-3a5304e993ae');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e0ee47b4-c7cd-48b1-87b9-fb8664140b5a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0ee47b4-c7cd-48b1-87b9-fb8664140b5a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e0ee47b4-c7cd-48b1-87b9-fb8664140b5a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4a5a7bde-1417-446a-a264-298b8d40d66a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('train_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4a5a7bde-1417-446a-a264-298b8d40d66a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('train_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_data"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["train_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CCwQBOO57xXc","executionInfo":{"status":"ok","timestamp":1728657128469,"user_tz":-420,"elapsed":639,"user":{"displayName":"Trinh VÅ©","userId":"11090666170602855077"}},"outputId":"af29c4e1-d840-41ec-a659-5a29cab85b8d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2000 entries, 0 to 1999\n","Data columns (total 21 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   battery_power  2000 non-null   int64  \n"," 1   blue           2000 non-null   int64  \n"," 2   clock_speed    2000 non-null   float64\n"," 3   dual_sim       2000 non-null   int64  \n"," 4   fc             2000 non-null   int64  \n"," 5   four_g         2000 non-null   int64  \n"," 6   int_memory     2000 non-null   int64  \n"," 7   m_dep          2000 non-null   float64\n"," 8   mobile_wt      2000 non-null   int64  \n"," 9   n_cores        2000 non-null   int64  \n"," 10  pc             2000 non-null   int64  \n"," 11  px_height      2000 non-null   int64  \n"," 12  px_width       2000 non-null   int64  \n"," 13  ram            2000 non-null   int64  \n"," 14  sc_h           2000 non-null   int64  \n"," 15  sc_w           2000 non-null   int64  \n"," 16  talk_time      2000 non-null   int64  \n"," 17  three_g        2000 non-null   int64  \n"," 18  touch_screen   2000 non-null   int64  \n"," 19  wifi           2000 non-null   int64  \n"," 20  price_range    2000 non-null   int64  \n","dtypes: float64(2), int64(19)\n","memory usage: 328.2 KB\n"]}]},{"cell_type":"code","source":["train_data['price_range'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"HLH6_2zlCqjg","executionInfo":{"status":"ok","timestamp":1728657972691,"user_tz":-420,"elapsed":686,"user":{"displayName":"Trinh VÅ©","userId":"11090666170602855077"}},"outputId":"1af1bf8a-9159-49ec-c57b-65e6980ea1c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["price_range\n","1    500\n","2    500\n","3    500\n","0    500\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>price_range</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>500</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>500</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Import necessary libraries\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import accuracy_score\n","import matplotlib.pyplot as plt\n","\n","X = train_data.drop(columns=['price_range'])  # Features\n","y = train_data['price_range']  # Target variable\n","\n","# Split the dataset into training and testing sets (80:20 split)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Initialize variables to store errors for different values of K\n","train_error_rate = []\n","test_error_rate = []\n","\n","# Loop over a range of K values from 1 to 30\n","for k in range(1, 31):\n","    knn = KNeighborsClassifier(n_neighbors=k)\n","    knn.fit(X_train, y_train)  # Train the model\n","\n","    # Predict on the training set\n","    y_train_pred = knn.predict(X_train)\n","    # Calculate training error rate\n","    train_error_rate.append(np.mean(y_train_pred != y_train))\n","\n","    # Predict on the test set\n","    y_test_pred = knn.predict(X_test)\n","    # Calculate testing error rate\n","    test_error_rate.append(np.mean(y_test_pred != y_test))\n","\n","# Plot the training and testing error rates\n","plt.figure(figsize=(10, 6))\n","plt.plot(range(1, 31), train_error_rate, marker='o', linestyle='-', color='g', label='Train Error')\n","plt.plot(range(1, 31), test_error_rate, marker='o', linestyle='-', color='b', label='Test Error')\n","plt.title('Train vs Test Error Rate vs. K Value')\n","plt.xlabel('K')\n","plt.ylabel('Error Rate')\n","plt.xticks(range(1, 31))  # Set x-ticks for each K value\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n","\n","# Find the best K (based on the previous test error rate)\n","best_k = np.argmin(test_error_rate) + 1  # +1 because index starts at 0\n","print(f\"The best K value is: {best_k}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":581},"id":"h7Tnzm27IbKx","executionInfo":{"status":"ok","timestamp":1728659535874,"user_tz":-420,"elapsed":11481,"user":{"displayName":"Trinh VÅ©","userId":"11090666170602855077"}},"outputId":"6598d9fc-db35-4d29-d06b-cb517356233e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["The best K value is: 7\n"]}]},{"cell_type":"code","source":["prediction = knn.predict"],"metadata":{"id":"Y9vPAVQrLGS9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_test_final = test_data.drop(columns=['id'])  # Remove 'id' column from test data\n","X_test_final = X_test_final[X.columns]  # Align the test columns with train columns\n","\n","# Initialize and train the KNN model with k = 7\n","k = 7\n","knn = KNeighborsClassifier(n_neighbors=k)\n","knn.fit(X, y)  # Train the KNN model\n","\n","# Predict the price_range for the test dataset\n","test_predictions = knn.predict(X_test_final)\n","\n","# Add the predictions to the test_data DataFrame (keep all the original columns + price_range)\n","test_data['price_range'] = test_predictions\n","\n","# Save the entire test dataset with predictions (including all features and id)\n","test_data.to_csv('test_predictions_full.csv', index=False)\n","\n","print(\"Prediction complete! The full test data has been saved to 'test_predictions_full.csv'.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u6J5IASAIwhz","executionInfo":{"status":"ok","timestamp":1728660764610,"user_tz":-420,"elapsed":510,"user":{"displayName":"Trinh VÅ©","userId":"11090666170602855077"}},"outputId":"8dca2360-3952-4168-f570-6087c2202268"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Prediction complete! The full test data has been saved to 'test_predictions_full.csv'.\n"]}]},{"cell_type":"code","source":["test_prediction = pd.read_csv('test_predictions_full.csv')"],"metadata":{"id":"NJ0mOGhgKgDp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"HPUY3-RfMFGq","executionInfo":{"status":"ok","timestamp":1728660783713,"user_tz":-420,"elapsed":540,"user":{"displayName":"Trinh VÅ©","userId":"11090666170602855077"}},"outputId":"07be1f9f-5d42-4658-cf38-1a31e3c9be6f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       id  battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n","0       1           1043     1          1.8         1  14       0           5   \n","1       2            841     1          0.5         1   4       1          61   \n","2       3           1807     1          2.8         0   1       0          27   \n","3       4           1546     0          0.5         1  18       1          25   \n","4       5           1434     0          1.4         0  11       1          49   \n","..    ...            ...   ...          ...       ...  ..     ...         ...   \n","995   996           1700     1          1.9         0   0       1          54   \n","996   997            609     0          1.8         1   0       0          13   \n","997   998           1185     0          1.4         0   1       1           8   \n","998   999           1533     1          0.5         1   0       0          50   \n","999  1000           1270     1          0.5         0   4       1          35   \n","\n","     m_dep  mobile_wt  ...  px_height  px_width   ram  sc_h  sc_w  talk_time  \\\n","0      0.1        193  ...        226      1412  3476    12     7          2   \n","1      0.8        191  ...        746       857  3895     6     0          7   \n","2      0.9        186  ...       1270      1366  2396    17    10         10   \n","3      0.5         96  ...        295      1752  3893    10     0          7   \n","4      0.5        108  ...        749       810  1773    15     8          7   \n","..     ...        ...  ...        ...       ...   ...   ...   ...        ...   \n","995    0.5        170  ...        644       913  2121    14     8         15   \n","996    0.9        186  ...       1152      1632  1933     8     1         19   \n","997    0.5         80  ...        477       825  1223     5     0         14   \n","998    0.4        171  ...         38       832  2509    15    11          6   \n","999    0.1        140  ...        457       608  2828     9     2          3   \n","\n","     three_g  touch_screen  wifi  price_range  \n","0          0             1     0            3  \n","1          1             0     0            3  \n","2          0             1     1            3  \n","3          1             1     0            3  \n","4          1             0     1            1  \n","..       ...           ...   ...          ...  \n","995        1             1     0            2  \n","996        0             1     1            1  \n","997        1             0     0            0  \n","998        0             1     0            2  \n","999        1             0     1            2  \n","\n","[1000 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-e836f57d-bc49-4236-94bd-23217cdbc8ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>battery_power</th>\n","      <th>blue</th>\n","      <th>clock_speed</th>\n","      <th>dual_sim</th>\n","      <th>fc</th>\n","      <th>four_g</th>\n","      <th>int_memory</th>\n","      <th>m_dep</th>\n","      <th>mobile_wt</th>\n","      <th>...</th>\n","      <th>px_height</th>\n","      <th>px_width</th>\n","      <th>ram</th>\n","      <th>sc_h</th>\n","      <th>sc_w</th>\n","      <th>talk_time</th>\n","      <th>three_g</th>\n","      <th>touch_screen</th>\n","      <th>wifi</th>\n","      <th>price_range</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1043</td>\n","      <td>1</td>\n","      <td>1.8</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0.1</td>\n","      <td>193</td>\n","      <td>...</td>\n","      <td>226</td>\n","      <td>1412</td>\n","      <td>3476</td>\n","      <td>12</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>841</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>61</td>\n","      <td>0.8</td>\n","      <td>191</td>\n","      <td>...</td>\n","      <td>746</td>\n","      <td>857</td>\n","      <td>3895</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1807</td>\n","      <td>1</td>\n","      <td>2.8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>0.9</td>\n","      <td>186</td>\n","      <td>...</td>\n","      <td>1270</td>\n","      <td>1366</td>\n","      <td>2396</td>\n","      <td>17</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1546</td>\n","      <td>0</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>25</td>\n","      <td>0.5</td>\n","      <td>96</td>\n","      <td>...</td>\n","      <td>295</td>\n","      <td>1752</td>\n","      <td>3893</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1434</td>\n","      <td>0</td>\n","      <td>1.4</td>\n","      <td>0</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>49</td>\n","      <td>0.5</td>\n","      <td>108</td>\n","      <td>...</td>\n","      <td>749</td>\n","      <td>810</td>\n","      <td>1773</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>996</td>\n","      <td>1700</td>\n","      <td>1</td>\n","      <td>1.9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>54</td>\n","      <td>0.5</td>\n","      <td>170</td>\n","      <td>...</td>\n","      <td>644</td>\n","      <td>913</td>\n","      <td>2121</td>\n","      <td>14</td>\n","      <td>8</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>997</td>\n","      <td>609</td>\n","      <td>0</td>\n","      <td>1.8</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>0.9</td>\n","      <td>186</td>\n","      <td>...</td>\n","      <td>1152</td>\n","      <td>1632</td>\n","      <td>1933</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>998</td>\n","      <td>1185</td>\n","      <td>0</td>\n","      <td>1.4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>0.5</td>\n","      <td>80</td>\n","      <td>...</td>\n","      <td>477</td>\n","      <td>825</td>\n","      <td>1223</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>14</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>999</td>\n","      <td>1533</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>0.4</td>\n","      <td>171</td>\n","      <td>...</td>\n","      <td>38</td>\n","      <td>832</td>\n","      <td>2509</td>\n","      <td>15</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>1000</td>\n","      <td>1270</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>0.1</td>\n","      <td>140</td>\n","      <td>...</td>\n","      <td>457</td>\n","      <td>608</td>\n","      <td>2828</td>\n","      <td>9</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows Ã 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e836f57d-bc49-4236-94bd-23217cdbc8ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e836f57d-bc49-4236-94bd-23217cdbc8ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e836f57d-bc49-4236-94bd-23217cdbc8ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c9baf1b-780d-4789-a1cd-49a059e87da6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c9baf1b-780d-4789-a1cd-49a059e87da6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c9baf1b-780d-4789-a1cd-49a059e87da6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ddb62f83-c176-4c3f-84ce-197ae51f202a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_prediction')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ddb62f83-c176-4c3f-84ce-197ae51f202a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_prediction');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_prediction"}},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["test_prediction['price_range'].value_counts()"],"metadata":{"id":"UxvtF6RkMG_D","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1728660990005,"user_tz":-420,"elapsed":607,"user":{"displayName":"Trinh VÅ©","userId":"11090666170602855077"}},"outputId":"ad8082ab-c8f2-4456-b91d-4029ef39111a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["price_range\n","3    264\n","0    262\n","2    250\n","1    224\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>price_range</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>264</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>262</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>250</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>224</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":[],"metadata":{"id":"9YnydubpOWLy"},"execution_count":null,"outputs":[]}]}